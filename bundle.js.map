{"version":3,"file":"bundle.js","sources":["LocateControl.js","config.js","main.js","rappid.js","requests.js","utils.js","models/RoutesCollection.js","models/Shape.js","models/Stop.js","models/StopCollection.js","models/Trip.js","models/TripCollection.js","models/Vehicles.js"],"names":[],"mappings":"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","sourcesContent":["var leaflet = require('leaflet');\nvar when = require('when');\n\nvar LocateControl = leaflet.Control.extend({\n    userLatLng: [0, 0],\n    innerMarker: null,\n    outerMarker: null,\n    map: null,\n    options: {\n        icon: 'icon-location',\n        position: 'topleft',\n        zoomLevel: 16,\n        pollInterval: 30 * 1000\n    },\n    onAdd: function (map) {\n        this.container = leaflet.DomUtil.create('div', 'locate-control leaflet-bar leaflet-control');\n        this.map = map; // i wonder if this will cause memory leak\n\n        var link = leaflet.DomUtil .create('a', 'leaflet-bar-part leaflet-bar-part-single ' + this.options.icon, this.container);\n\n        leaflet.DomEvent\n            .on(link, 'click', leaflet.DomEvent.stopPropagation)\n            .on(link, 'click', leaflet.DomEvent.preventDefault)\n            .on(link, 'click', this.zoomToLocation.bind(this))\n            .on(link, 'dblclick', leaflet.DomEvent.stopPropagation);\n\n        this.locate();\n\n        return this.container;\n    },\n    zoomToLocation: function(map) {\n        this.map.setView(this.userLatLng, this.options.zoomLevel);\n    },\n    locate: function() {\n        this.container.classList.add('loading');\n\n        this.map.locate({\n            maximumAge: 1000,\n            enableHighAccuracy: true,\n            watch: true\n        });\n\n        this.map.on('locationfound', function(e) {\n            this.userLatLng = e.latlng;\n            this.updateMarkers();\n            this.container.classList.remove('loading');\n         }.bind(this));\n\n        this.map.on('locationerror', function(e) {\n            this.userLatLng = {lat: 30.268066, lng: -97.743189}; //Default location if we couldn't get yours.\n            this.updateMarkers();\n            this.container.classList.remove('loading');\n            console.error('Unable to find location: ', e.message);\n        }.bind(this));\n    },\n    updateMarkers: function() {\n        if (!this.innerMarker || !this.outerMarker) {\n            this.createMarkers(this.map);\n        }\n\n        this.innerMarker.setLatLng(this.userLatLng);\n        this.outerMarker.setLatLng(this.userLatLng);\n    },\n    createMarkers: function() {\n        this.innerMarker = leaflet.circleMarker(this.userLatLng,{\n            weight: 0,\n            fillColor: 'rgb(16,94,251)',\n            fill: true,\n            fillOpacity: 1,\n            radius: 5\n        });\n        this.outerMarker = leaflet.circleMarker(this.userLatLng, {\n            color: 'rgb(20,130,210)',\n            opacity: 1,\n            weight: 2,\n            fillColor: 'rgb(108,196,253)',\n            fill: true,\n            fillOpacity: 0.4,\n            radius: 15\n        });\n        this.outerMarker.addTo(this.map);\n        this.outerMarker.bindPopup('Current Location');\n        this.innerMarker.addTo(this.map);\n    }\n});\n\nmodule.exports = LocateControl;\n","var config =  {\n    vehicleZIndex: 10,\n    stopZIndex: 5\n};\nmodule.exports = config;\n","var ko = require('knockout');\nvar Rappid = require('./rappid');\n\nvar rappid = window.rappid = new Rappid();\nwindow.ko = ko;\n\nko.applyBindings(rappid, document.getElementById('lerappid'));\nrappid.start().catch(function(e) {\n    console.error(e);\n    if (e === 'The CapMetro API is unavailable') {\n        rappid.rustle();\n    }\n});\n","var ko = require('knockout');\nvar L = require('leaflet');\nvar when = require('when');\nvar NProgress = require('NProgress');\nvar LocateControl = require('./LocateControl');\nvar RoutesCollection = require('./models/RoutesCollection');\nvar Vehicles = require('./models/Vehicles');\nvar Shape = require('./models/Shape');\nvar StopCollection = require('./models/StopCollection');\n\n\nfunction Rappid() {\n    // leaflet\n    this.map = null;\n    this.routeLayer = null;\n    this.latlng = null;\n\n    // data\n    this.vehicles = null;\n    this.shape = null;\n\n    // viewmodels\n    this.availableRoutes = ko.observableArray();\n    this.route = ko.observable();\n    this.stops = ko.observableArray();\n\n    // options\n    this.includeList = ko.observable(true);\n    this.includeMap = ko.observable(true);\n    this.includeToggleBtn = ko.computed(function() {\n        return !this.includeList() || !this.includeMap();\n    }.bind(this));\n}\n\nRappid.prototype = {\n    start: function() {\n        var deferred = when.defer();\n\n        this.resize();\n        this.setupMap();\n\n        RoutesCollection.fetch().then(\n            function(routes) {\n                this.availableRoutes(routes);\n\n                var cachedRoute = JSON.parse(localStorage.getItem('rappid:route')),\n                    defaultRoute = this.availableRoutes()[0];\n\n                if (cachedRoute) {\n                    defaultRoute = this.availableRoutes().filter(function(r) { return cachedRoute.id === r.id && cachedRoute.direction === r.direction; })[0];\n                }\n\n                this.route(defaultRoute);\n                this.setupRoute().then(null, console.error);\n\n                deferred.resolve();\n            }.bind(this),\n            deferred.reject\n        );\n\n        NProgress.configure({ showSpinner: false });\n\n        return deferred.promise;\n    },\n    refresh: function() {\n        NProgress.start();\n\n        var deferred = when.defer(),\n            vehiclesPromise = this.vehicles.fetch(),\n            stopPromises = this.stops().map(function(stop) { return stop.refresh(); }),\n            promises;\n\n        vehiclesPromise.then(this.vehicles.draw.bind(this.vehicles, this.routeLayer));\n\n        promises = [vehiclesPromise];\n        promises = promises.concat(stopPromises);\n\n        when.all(promises).done(\n            function() {\n                NProgress.done();\n                setTimeout(this.refresh.bind(this), 15 * 1000);\n                deferred.resolve(true);\n            }.bind(this),\n            function(e) {\n                console.error(e);\n                NProgress.done();\n                if (e === 'The CapMetro API is unavailable') {\n                    this.rustle();\n                }\n                deferred.resolve(false);\n            }.bind(this)\n        );\n\n        // always resolves to true (success) or false (error)\n        // doesn't not reject because we don't want an error to propogate from here since it is self scheduling\n        return deferred.promise;\n    },\n    setupMap: function() {\n        var tileLayer,\n            zoomCtrl,\n            locateCtrl;\n\n        this.map = L.map('map', {zoomControl: false,});\n        this.map.setView([30.267153, -97.743061], 12);\n\n        tileLayer = L.tileLayer('https://{s}.tiles.mapbox.com/v3/{id}/{z}/{x}/{y}.png', {\n            maxZoom: 18,\n            attribution: '<a href=\"http://openstreetmap.org\">OpenStreetMap</a> | <a href=\"http://mapbox.com\">Mapbox</a>',\n            id: 'drmaples.ipbindf8'\n        });\n\n        zoomCtrl = new L.Control.Zoom({position: 'bottomright'});\n\n        locateCtrl = new LocateControl({\n            position: 'bottomright',\n            zoomLevel: 16,\n        });\n\n        tileLayer.addTo(this.map);\n        zoomCtrl.addTo(this.map);\n        locateCtrl.addTo(this.map);\n\n        this.map.on('locationfound', function(e) {\n            if (!this.latlng) {\n                StopCollection.closest(this.stops(), e.latlng);\n            }\n            this.latlng = e.latlng;\n        }.bind(this));\n    },\n    selectRoute: function() {\n        this.setupRoute().done(null, console.error);\n    },\n    setupRoute: function() {\n        var deferred = when.defer(),\n            route = this.route().id,\n            direction = this.route().direction,\n            promises,\n            shapePromise,\n            vehiclesPromise,\n            stopsPromise;\n\n        this.track();\n\n        console.log('Setup route', this.route());\n        localStorage.setItem('rappid:route', ko.toJSON(this.route()));\n\n        if (this.routeLayer) {\n            this.map.removeLayer(this.routeLayer);\n        }\n\n        this.routeLayer = L.layerGroup();\n        this.routeLayer.addTo(this.map);\n\n        this.vehicles = new Vehicles(route, direction);\n        this.shape = new Shape(route, direction);\n\n        shapePromise = this.shape.fetch();\n        shapePromise.then(this.shape.draw.bind(this.shape, this.routeLayer));\n\n        vehiclesPromise = this.vehicles.fetch();\n        vehiclesPromise.then(this.vehicles.draw.bind(this.vehicles, this.routeLayer));\n\n        stopsPromise = StopCollection.fetch(route, direction);\n        stopsPromise.then(\n            function(stops) {\n                StopCollection.draw(stops, this.routeLayer);\n                this.stops(stops);\n\n                if (this.latlng) {\n                    StopCollection.closest(stops, this.latlng);\n                }\n            }.bind(this)\n        );\n\n        promises = [shapePromise, vehiclesPromise, stopsPromise];\n\n        when.all(promises).done(\n            function() {\n                setTimeout(this.refresh.bind(this), 15 * 1000);\n                deferred.resolve();\n            }.bind(this),\n            function(e) {\n                console.error(e);\n                NProgress.done();\n                if (e === 'The CapMetro API is unavailable') {\n                    this.rustle();\n                }\n                deferred.resolve(false);\n            }.bind(this)\n        );\n\n        return deferred.promise;\n    },\n    resize: function(e) {\n        if (window.screen.width <= 1024) {\n            this.includeMap(true);\n            this.includeList(false);\n        }\n        else {\n            this.includeMap(true);\n            this.includeList(true);\n        }\n    },\n    toggleMap: function() {\n        this.includeList(!this.includeList());\n        this.includeMap(!this.includeMap());\n        this.map.invalidateSize();\n        this.map.closePopup();\n        document.body.scrollTop = document.documentElement.scrollTop = 0;\n    },\n    track: function() {\n        var routeDirection = this.route().id + '-' + this.route().direction;\n        window.ga('send', {\n            'dimension1': routeDirection,\n            'hitType': 'screen',\n            'screenName': routeDirection\n        });\n    },\n    rustle: function() {\n        window.alert('There was a problem fetching data from CapMetro.\\nClose the app and try again.');\n        // setTimeout(function() {\n        //     window.alert('There is no need to be upset.');\n        //     setTimeout(function() {\n        //         window.location.href = \"https://www.youtube.com/watch?v=ygr5AHufBN4\";\n        //     }, 5000);\n        // }, 2000);\n    }\n};\n\nmodule.exports = Rappid;\n","var when = require('when');\n\nvar requests = {\n    requestID: 0,\n    send: function(method, url, data, headers) {\n        var self = this,\n            deferred = when.defer(),\n            xhr = new XMLHttpRequest(),\n            done = false,\n            lowerMethod = method.toLowerCase(),\n            isGetRequest = lowerMethod === 'get',\n            isDeleteRequest = lowerMethod === 'delete',\n            requestID;\n\n        this.requestID += 1;\n        requestID = this.requestID;\n\n        if (isGetRequest && data && Object.keys(data).length > 0) {\n            url += '?' + this.serializeParams(data);\n        }\n\n        xhr.onload = function(event) {\n            // Sometimes webkit gets a little trigger happy and calls this multiple times\n            // https://code.google.com/p/chromium/issues/detail?id=159827\n            if (done) return;\n            done = true;\n\n            var logFn = xhr.status > 299 ? console.error : console.log;\n            // logFn.call(undefined, requestID.toString(), '[' + method.toUpperCase() + ']', url, '=>', xhr.status);\n            console.log(requestID.toString(), '[' + method.toUpperCase() + ']', url, '=>', xhr.status);\n\n            // Sometimes different environments don't use case-insensitive matching\n            var contentType = xhr.getResponseHeader('content-type') || xhr.getResponseHeader('Content-type');\n\n            if (xhr.status >= 200 && xhr.status < 400) {\n                var result = null;\n                if (/application\\/json/i.test(contentType)) {\n                    result = JSON.parse(xhr.responseText);\n                } else if (/text\\/xml/i.test(contentType)) {\n                    var parser = new DOMParser();\n                    result = parser.parseFromString(xhr.responseText, \"text/xml\");\n                } else {\n                    result = xhr.responseText;\n                }\n                deferred.resolve(result);\n            }\n            else {\n                deferred.reject(xhr.responseText);\n            }\n        };\n\n        xhr.onerror = function() {\n            deferred.reject(new Error('Unable to connect to the server.'));\n        };\n\n        xhr.ontimeout = function() {\n            deferred.reject(new Error('It took too long for the server to respond.'));\n        };\n\n        xhr.open(method, url, true);\n\n        if (headers) {\n            headers.forEach(function(value, headerName) {\n                xhr.setRequestHeader(headerName, value);\n            });\n        }\n\n        var requestData = data !== undefined && !isGetRequest ? JSON.stringify(data) : undefined;\n\n        // NOTE: nginx gets pissy if the content-length header is set to 0 so we send along garbage data\n        if (isDeleteRequest && (!requestData || requestData.length === 0)) {\n            requestData = '1';\n        }\n\n        xhr.timeout = 1000 * 30;\n        xhr.send(requestData);\n\n        return deferred.promise;\n    },\n    serializeParams: function(params) {\n        var keyValues = [];\n\n        function push(key, val) {\n            keyValues.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));\n        }\n\n        for (var key in params) {\n            if (params.hasOwnProperty(key)) {\n                var val = params[key];\n\n                if (Array.isArray(val)) {\n                    var pushArrayVal = push.bind(undefined, key);\n                    val.forEach(pushArrayVal);\n                }\n                else {\n                    push(key, val);\n                }\n            }\n        }\n\n        return keyValues.join('&');\n    }\n};\n\nrequests.get = requests.send.bind(requests, 'GET');\nrequests.put = requests.send.bind(requests, 'PUT');\nrequests.patch = requests.send.bind(requests, 'PATCH');\nrequests.post = requests.send.bind(requests, 'POST');\nrequests.delete = requests.send.bind(requests, 'DELETE');\n\nmodule.exports = requests;\n","var utils = {\n    // 550 uses 1 for NB, 801 uses 0 ...thats just how capmetro rolls\n    formatDirection: function(route, direction) {\n        route = parseInt(route);\n        if (direction === 0) {\n            if (route === 801) {\n                return 'North';\n            }\n            if (route === 550) {\n                return 'South';\n            }\n            return 'South';\n        }\n        if (direction === 1) {\n            if (route === 801) {\n                return 'South';\n            }\n            if (route === 550) {\n                return 'North';\n            }\n        }\n        if (direction === 'S') {\n            return 'South';\n        }\n        if (direction === 'N') {\n            return 'North';\n        }\n    },\n    getDirectionID: function(route, direction) {\n        route = parseInt(route);\n        direction = direction.toLowerCase().replace('/', '');\n\n        if (direction === 'north' || direction === 'n') {\n            if (route === 801) {\n                return 0;\n            }\n            if (route === 550) {\n                return 1;\n            }\n        }\n        if (direction === 'south' || direction === 's') {\n            if (route === 801) {\n                return 1;\n            }\n            if (route === 550) {\n                return 0;\n            }\n        }\n\n        return 0;\n    }\n};\n\nmodule.exports = utils;\n","var when = require('when');\nvar requests = require('../requests');\n\nvar RoutesCollection = {\n    fetch: function() {\n        var deferred = when.defer();\n\n        requests.get('data/routes.json')\n            .then(function(data) {\n                var routes = data.map(function(row) {\n                    return row;\n                });\n\n                deferred.resolve(routes);\n            })\n            .catch(function(err) {\n                console.error(err);\n                deferred.reject(err);\n            });\n\n        return deferred.promise;\n    }\n};\n\nmodule.exports = RoutesCollection;\n","var L = require('leaflet');\nvar when = require('when');\nvar config = require('../config');\nvar requests = require('../requests');\n\nfunction Shape(route, direction) {\n    this.route = route;\n    this.direction = direction;\n    this._shape = [];\n}\n\nShape.prototype = {\n    fetch: function() {\n        var deferred = when.defer();\n\n        requests.get('data/shapes_' + this.route + '_' + this.direction + '.json')\n            .then(function(data) {\n                this._shape = data.map(function(el) {\n                    return new L.LatLng(el.shape_pt_lat, el.shape_pt_lon);\n                });\n                deferred.resolve();\n            }.bind(this))\n            .catch(function(err) {\n                console.error(\"problem fetching shape\", err);\n                deferred.reject(err);\n            });\n\n        return deferred.promise;\n    },\n    draw: function(layer) {\n        var color ='rgb(199,16,22)',\n            line = new L.Polyline(this._shape, {\n                color: color,\n                stroke: true,\n                weight: 5,\n                opacity: 0.9,\n                smoothFactor: 1\n            });\n        line.addTo(layer);\n        line.bringToBack();  // https://github.com/Leaflet/Leaflet/issues/185\n    }\n};\n\nmodule.exports = Shape;\n","var ko = require('knockout');\nvar when = require('when');\nvar leaflet = require('leaflet');\nvar TripCollection = require('./TripCollection');\nvar fs = require('fs');\nvar config = require('../config');\n\nvar stopPopupHTML = fs.readFileSync(__dirname + '/../templates/stop-popup.html', 'utf8');\n\nfunction Stop(data) {\n    var stop_name = data.stop_name.replace('(SB)', '').replace('(NB)', '');\n    this.name = ko.observable(stop_name);\n    this.direction = ko.observable(parseInt(data.direction_id));\n    this.route = ko.observable(parseInt(data.route_id));\n    this.code = ko.observable(data.stop_code);\n    this.desc = ko.observable(data.stop_desc);\n    this.id = ko.observable(data.stop_id);\n    this.lat = ko.observable(data.stop_lat);\n    this.lon = ko.observable(data.stop_lon);\n    this.timezone = ko.observable(data.stop_timezone);\n    this.url = ko.observable(data.url);\n    this.errorMsg = ko.observable();\n\n    this.trips = ko.observableArray();\n\n    this.closest = ko.observable(false);\n    this.cssId = ko.observable('stop-' + data.stop_id);\n\n    this.showTrips = ko.observable(false);\n    this.loadedTrips = ko.observable(false);\n    this.loading = ko.observable(false);\n    this.showProgress = ko.computed(function() {\n        // don't show after the first load\n        return this.loading() && !this.loadedTrips();\n    }.bind(this));\n\n    this.color = 'rgb(199,16,22)';\n\n    this.marker = leaflet.circleMarker([this.lat(), this.lon()], {\n            color: 'white',\n            opacity: 1,\n            weight: 3,\n            fillColor: this.color,\n            fill: true,\n            fillOpacity: 1,\n            radius: 12,\n            zIndexOffset: config.stopZIndex\n        });\n\n    this.marker.bindPopup(this.popupContent());\n\n    this.marker.addEventListener('click', function(e) {\n        if (!this.loadedTrips()) {\n            this.loadTrips().then(null, console.error);\n        }\n    }.bind(this));\n}\n\nStop.prototype = {\n    toggleTrips: function() {\n        this.showTrips(!this.showTrips());\n\n        if (this.showTrips()) {\n            this.marker.openPopup();\n        }\n        else {\n            this.marker.closePopup();\n        }\n\n        if (!this.loadedTrips()) {\n            this.loadTrips().then(\n                null,  // FIXME: Should make the map fit the popup\n                function(e) { console.error(e); }\n            );\n        }\n    },\n    loadTrips: function() {\n        var deferred = when.defer();\n\n        this.showTrips(true);\n        this.loading(true);\n\n        TripCollection.fetch(this.route(), this.direction(), this.id()).then(\n            function(trips) {\n                this.loadedTrips(true);\n                this.loading(false);\n                this.trips(trips);\n                this.errorMsg(null);\n                deferred.resolve();\n            }.bind(this),\n            function(e) {\n                this.loadedTrips(true);\n                this.loading(false);\n                this.errorMsg(e);\n                deferred.reject(e);\n            }.bind(this)\n        );\n\n        return deferred.promise;\n    },\n    refresh: function() {\n        if (this.showTrips()) {\n            return this.loadTrips();\n        }\n    },\n    popupContent: function() {\n        var div = document.createElement('div');\n        div.innerHTML = stopPopupHTML;\n        ko.applyBindings(this, div);\n        return div;\n    }\n};\n\nmodule.exports = Stop;\n","var L = require('leaflet');\nvar when = require('when');\nvar geolib = require('geolib');\nvar config = require('../config');\nvar Stop = require('./Stop');\nvar requests = require('../requests');\n\nvar StopCollection = {\n    fetch: function(route, direction) {\n        var deferred = when.defer();\n\n        requests.get('data/stops_' + route + '_' + direction + '.json')\n            .then(function(data) {\n                var stops = data.map(function(stopData) {\n                    return new Stop(stopData);\n                });\n\n                deferred.resolve(stops);\n            })\n            .catch(function(err) {\n                console.error(\"Problem fetching stop\", err);\n                deferred.reject(err);\n            });\n\n        return deferred.promise;\n    },\n    draw: function(stops, layer) {\n        stops.forEach(function(stop) {\n            stop.marker.addTo(layer);\n        });\n    },\n    closest: function(stops, latlng) {\n        if (!stops.length) return;\n\n        var points = stops.map(function(s) { return { latitude: s.lat(), longitude: s.lon()}; }),\n            _latlng = {latitude: latlng.lat, longitude: latlng.lng },\n            nearestPoint,\n            stop;\n\n        nearestPoint = geolib.findNearest(_latlng, points, 0, 1);\n        stop = stops[parseInt(nearestPoint.key)];\n\n        stop.closest(true);\n        document.body.scrollTop = document.getElementById(stop.cssId()).offsetTop;  // mobile\n        document.getElementById('list').scrollTop = document.getElementById(stop.cssId()).offsetTop;  // desktop\n        stop.toggleTrips();\n\n        return stop;\n    }\n};\n\nmodule.exports = StopCollection;\n","var ko = require('knockout');\nvar moment = require('moment');\n\nfunction Trip(data) {\n    this.tripTime = ko.observable(data.Triptime);\n    this.id = ko.observable(data.Tripid);\n    this.skedTripID = ko.observable(data.Skedtripid);\n    this.block = ko.observable(data.Block);\n    this.exception = ko.observable(data.Exception);\n\n    this.moment = ko.computed(function() { return moment(this.tripTime(), 'hh:mm A'); }.bind(this));\n    this.prettyTime = ko.computed(function() { return this.moment().fromNow(); }.bind(this));\n    this.old = ko.computed(function() { return ! this.moment().isAfter(); }.bind(this));\n}\n\nmodule.exports = Trip;\n","var when = require('when');\nvar utils = require('../utils');\nvar Trip = require('./Trip');\nvar requests = require('../requests');\n\nvar TripCollection = {\n    fetch: function(route, direction, stop) {\n        var deferred = when.defer(),\n            url = 'http://query.yahooapis.com/v1/public/yql',\n            capUrl = 'http://www.capmetro.org/planner/s_service.asp?output=xml&opt=2&tool=SI&route=' + route + '&stopid=' + stop,\n            params = {\n                q: 'select * from xml where url=\"' + capUrl + '\"',\n                format: 'json' // let yql do the conversion from xml to json\n            };\n\n        requests.get(url, params)\n            .then(function(data) {\n                var results = data.query.results,\n                    Envelope,\n                    Fault,\n                    Service,\n                    Tripinfo,\n                    trips;\n\n                if (results === null || !results.Envelope) {\n                    console.error(\"Bad arrival times data:\", data);\n                    deferred.reject('The CapMetro API is unavailable');\n                    return;\n                }\n\n                Envelope = results.Envelope;\n                Fault = Envelope.Body.Fault;\n\n                if (Fault) {\n                    console.error(Fault);\n                    deferred.reject(new Error(Fault.faultstring));\n                    return;\n                }\n\n                Service = Envelope.Body.SchedulenearbyResponse.Atstop.Service;\n                if (Array.isArray(Service)) {\n                    // Filter out the wrong direction\n                    // But don't filter out the wrong direction if only one service is returned: this happens at the last stop in a route\n                    Service = Service.filter(function(s) {\n                        // `Direction` in the xml is N or S, not 0 or 1. convert it to something sane\n                        return utils.getDirectionID(s.Route, s.Direction) === direction;\n                    })[0];\n                }\n\n                Tripinfo = Service.Tripinfo;\n                if (!Array.isArray(Tripinfo)) {\n                    Tripinfo = [Tripinfo];\n                }\n\n                trips = Tripinfo.map(function(tripData) { return new Trip(tripData); });\n\n                // show only the most recent old trip\n                for (var i = 0; i < trips.length; i++) {\n                    if (! trips[i].old()) {\n                        if (i > 0) {\n                            trips = trips.slice(i-1);\n                        }\n                        break;\n                    }\n                }\n\n                deferred.resolve(trips);\n            }.bind(this))\n        .catch(function(err) {\n            console.error(\"Fetch arrivals\", err);\n            deferred.reject(err);\n        });\n\n        return deferred.promise;\n    }\n};\n\nmodule.exports = TripCollection;\n","var L = require('leaflet');\nvar when = require('when');\nvar _ = require('underscore');\nvar utils = require('../utils');\nvar config = require('../config');\nvar requests = require('../requests');\n\nfunction Vehicles(route, direction) {\n    this.route = route;\n    this.direction = direction;\n\n    this._vehicles = [];\n    this._markers = {};\n}\n\nVehicles.prototype = {\n    fetch: function() {\n        var deferred = when.defer(),\n            url = 'http://query.yahooapis.com/v1/public/yql',\n            params = {\n                q: 'select * from xml where url=\"http://www.capmetro.org/planner/s_buslocation.asp?route=*\"',\n                format: 'json' // let yql do the conversion from xml to json\n            };\n\n        requests.get(url, params)\n        .then(function(data) {\n            var results = data.query.results,\n                BuslocationResponse;\n\n            if (results === null || !results.Envelope) {\n                console.error(\"Bad vehicle location data:\", data);\n                deferred.reject('The CapMetro API is unavailable');\n                return;\n            }\n\n            BuslocationResponse = results.Envelope.Body.BuslocationResponse;\n\n            if (!BuslocationResponse.Vehicles) {\n                deferred.reject(new Error('Zero active vehicles'));\n                return;\n            }\n\n            this._vehicles = BuslocationResponse.Vehicles.Vehicle;\n\n            if (! Array.isArray(this._vehicles)) {  // not sure if this happens, but just in case\n                this._vehicles = [this._vehicles];\n            }\n\n            this._vehicles.forEach(function(vehicle) {\n                var Position = vehicle.Positions.Position,\n                    posStr = Array.isArray(Position) ? Position[0] : Position;\n                vehicle.lat = posStr.split(',')[0];\n                vehicle.lng = posStr.split(',')[1];\n            });\n\n            deferred.resolve();\n        }.bind(this))\n        .catch(function(err) {\n            console.error(\"Fetch vehicles\", err);\n            deferred.reject(err);\n        });\n\n        return deferred.promise;\n    },\n    draw: function(layer) {\n        var route = this.route,\n            direction = this.direction,\n            matchingVehicles = _.filter(this._vehicles, function(v) {\n                var _route = parseInt(v.Route),\n                    // `Direction` in the xml is N or S, not 0 or 1. convert it to something sane\n                    _dir = utils.getDirectionID(v.Route, v.Direction);\n\n                return route === _route && direction === _dir;\n            }),\n            vehicleIDs = matchingVehicles.map(function(v) { return v.Vehicleid; }),\n            deletedVehicleIDs = _.filter(Object.keys(this._markers), function(vehicleID) {\n                return !_.find(vehicleIDs, function(vID) { return vID === vehicleID; });\n            });\n\n        console.log('Vehicles', matchingVehicles.length, 'Deleted', deletedVehicleIDs.length);\n\n        deletedVehicleIDs.forEach(function(vID) {\n            layer.removeLayer(this._markers[vID]);\n            delete this._markers[vID];\n        }.bind(this));\n\n        matchingVehicles.forEach(function(vehicle) {\n            var marker = this._markers[vehicle.Vehicleid],\n                popupContent = this.popupContent(vehicle),\n                fillColor = vehicle.Inservice === 'Y' ? 'rgb(34,189,252)' : 'rgb(188,188,188)';\n\n            if (marker) {\n                var markerLatLng = marker.getLatLng(),\n                    start = [markerLatLng.lat, markerLatLng.lng],\n                    stop = [parseFloat(vehicle.lat), parseFloat(vehicle.lng)],\n                    steps = 200,\n                    delta = [stop[0] - start[0], stop[1] - start[1]];\n\n                marker._popup.setContent(popupContent);\n                marker.setStyle({fillColor: fillColor});\n\n                if (!_.isEqual(start, stop)) {\n\n                    if (document.visibilityState === 'visible') {\n                        this.animateMarker(marker, 0, steps, start, delta);\n                    } else {\n                        marker.setLatLng(stop);\n                    }\n                }\n\n                return;\n            }\n\n            marker = L.circleMarker([vehicle.lat, vehicle.lng], {\n                color: '#fff',\n                weight: 3,\n                radius: 15,\n                opacity: 1,\n                fillOpacity: '0.9',\n                fillColor: fillColor,\n                zIndexOffset: config.vehicleZIndex\n            });\n\n            marker.bindPopup(popupContent);\n            marker.addTo(layer);\n\n            this._markers[vehicle.Vehicleid] = marker;\n        }.bind(this));\n    },\n    popupContent: function(vehicle) {\n        // FIXME: Bind this with ko like Stop\n        var vehicleId = '<span class=\"id\">Vehicle ' + vehicle.Vehicleid + '</span>',\n            inner = [\n                'Updated at ' + vehicle.Updatetime,\n                'Moving ' + utils.formatDirection(vehicle.Route, vehicle.Direction) + ' at ' + vehicle.Speed + 'mph',\n                'Reliable? ' + vehicle.Reliable,\n                'Stopped? ' + vehicle.Stopped,\n                'Off Route? ' + vehicle.Offroute,\n                'In Service? ' + vehicle.Inservice,\n            ].join('<br />');\n        return '<div class=\"vehicle\">' + vehicleId + inner + '</div>';\n    },\n    easeInOutCubic: function(t, b, c, d) {\n        if ((t/=d/2) < 1) return c/2*t*t*t + b;\n        return c/2*((t-=2)*t*t + 2) + b;\n    },\n    animateMarker: function(marker, i, steps, startLatLng, deltaLatLng) {\n        var x = this.easeInOutCubic(i, startLatLng[0], deltaLatLng[0], steps),\n            y = this.easeInOutCubic(i, startLatLng[1], deltaLatLng[1], steps);\n        marker.setLatLng([x, y]);\n        if (i < steps) {\n            setTimeout(this.animateMarker.bind(this, marker, i+1, steps, startLatLng, deltaLatLng), 10);\n        }\n    }\n};\n\nmodule.exports = Vehicles;\n"],"sourceRoot":"/source/"}